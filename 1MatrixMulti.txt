#include<iostream>
#include<omp.h>
#include<malloc.h>
using namespace std;
int main()
{
	int n, i, j, threads;
	cout<<"Enter the dimension: ";
	cin >> n;
	int mat[100][100], vec[100];
	cout<<"\n Enter the matrix: ";
	for (i = 0; i < n; i++)
	{
		for (j = 0; j < n; j++)
		{
			cin>>mat[i][j];
		}
	}
	cout<<"\n Enter the vector: ";
	for (i = 0; i < n; i++)
	{
		cin>>vec[i];
	}
	omp_set_num_threads(2);
#pragma omp parallel for num_threads(2)
	for (i = 0; i < n; i++)
	{
		int total = 0;
		for (j = 0; j < n; j++)
		{
#pragma omp critical
			{
				total += mat[i][j] * vec[j];
			}
		}
		cout<<total<<endl;
		threads = omp_get_num_threads();
	}
	cout<<"THreads used: "<<threads;
}