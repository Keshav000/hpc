#include<iostream>
#include<stdlib.h>
#include<omp.h>
using namespace std;

int main()
{
	static long int n = 1000000;
	double step = 1.0 / double(n);
	int i;
	double x= 0.0,sum=0.0,pi;
	omp_set_num_threads(4);

#pragma omp parallel for private(x) reduction(+:sum)
	for (i = 0; i < n; i++)
	{
		x = (0.5 + i) * step;
#pragma omp critical
		sum += 4 / (1 + x * x);
	}

	pi = sum * step;
	cout << pi;
}